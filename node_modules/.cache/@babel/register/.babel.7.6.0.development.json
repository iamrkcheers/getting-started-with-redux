{
  "{\"sourceRoot\":\"/var/www/html/coding/learning/gettingStartedWithRedux\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/var/www/html/coding/learning/gettingStartedWithRedux\",\"filename\":\"/var/www/html/coding/learning/gettingStartedWithRedux/05_creatingToggleTodosReducer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/var/www/html/coding/learning/gettingStartedWithRedux\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/var/www/html/coding/learning/gettingStartedWithRedux",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/var/www/html/coding/learning/gettingStartedWithRedux",
      "filename": "/var/www/html/coding/learning/gettingStartedWithRedux/05_creatingToggleTodosReducer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/var/www/html/coding/learning/gettingStartedWithRedux",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/var/www/html/coding/learning/gettingStartedWithRedux/05_creatingToggleTodosReducer.js",
        "plugins": [
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/var/www/html/coding/learning/gettingStartedWithRedux/05_creatingToggleTodosReducer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/var/www/html/coding/learning/gettingStartedWithRedux",
        "sourceFileName": "05_creatingToggleTodosReducer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _expect = _interopRequireWildcard(require(\"expect\"));\n\nvar _deepFreeze = _interopRequireDefault(require(\"deep-freeze\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar todos = function todos() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODOS':\n      return [].concat(_toConsumableArray(prevState), [{\n        id: action.id,\n        text: action.text,\n        completed: false\n      }]);\n\n    case 'TOGGLE_TODOS':\n      return prevState.map(function (todo) {\n        if (todo.id !== action.id) return todo;else return _objectSpread({}, todo, {\n          completed: !todo.completed\n        });\n      });\n\n    default:\n      return prevState;\n  }\n};\n\nvar testAddTodo = function testAddTodo() {\n  var stateBefore = [];\n  var action = {\n    id: 0,\n    type: 'ADD_TODOS',\n    text: 'Do something !'\n  };\n  var stateAfter = [{\n    id: 0,\n    text: 'Do something !',\n    completed: false\n  }];\n  (0, _deepFreeze[\"default\"])(stateBefore);\n  (0, _deepFreeze[\"default\"])(action);\n  (0, _expect[\"default\"])(todos(stateBefore, action)).toEqual(stateAfter);\n};\n\nvar testToggleTodo = function testToggleTodo() {\n  var stateBefore = [{\n    id: 0,\n    text: 'Do something !',\n    completed: false\n  }, {\n    id: 1,\n    text: 'Do something, please !',\n    completed: false\n  }];\n  var action = {\n    id: 1,\n    type: 'TOGGLE_TODOS'\n  };\n  var stateAfter = [{\n    id: 0,\n    text: 'Do something !',\n    completed: false\n  }, {\n    id: 1,\n    text: 'Do something, please !',\n    completed: true\n  }];\n  (0, _deepFreeze[\"default\"])(stateBefore);\n  (0, _deepFreeze[\"default\"])(action);\n  (0, _expect[\"default\"])(todos(stateBefore, action)).toEqual(stateAfter);\n};\n\ntestAddTodo();\ntestToggleTodo();\nconsole.log('TESTS PASSED !');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjA1X2NyZWF0aW5nVG9nZ2xlVG9kb3NSZWR1Y2VyLmpzIl0sIm5hbWVzIjpbInRvZG9zIiwicHJldlN0YXRlIiwiYWN0aW9uIiwidHlwZSIsImlkIiwidGV4dCIsImNvbXBsZXRlZCIsIm1hcCIsInRvZG8iLCJ0ZXN0QWRkVG9kbyIsInN0YXRlQmVmb3JlIiwic3RhdGVBZnRlciIsInRvRXF1YWwiLCJ0ZXN0VG9nZ2xlVG9kbyIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUEyQjtBQUFBLE1BQTFCQyxTQUEwQix1RUFBZCxDQUFjO0FBQUEsTUFBWEMsTUFBVzs7QUFDeEMsVUFBT0EsTUFBTSxDQUFDQyxJQUFkO0FBQ0MsU0FBSyxXQUFMO0FBQ0MsMENBQ0lGLFNBREosSUFFQztBQUNDRyxRQUFBQSxFQUFFLEVBQUVGLE1BQU0sQ0FBQ0UsRUFEWjtBQUVDQyxRQUFBQSxJQUFJLEVBQUVILE1BQU0sQ0FBQ0csSUFGZDtBQUdDQyxRQUFBQSxTQUFTLEVBQUU7QUFIWixPQUZEOztBQVFELFNBQUssY0FBTDtBQUNDLGFBQU9MLFNBQVMsQ0FBQ00sR0FBVixDQUFjLFVBQUFDLElBQUksRUFBSTtBQUM1QixZQUFJQSxJQUFJLENBQUNKLEVBQUwsS0FBWUYsTUFBTSxDQUFDRSxFQUF2QixFQUNDLE9BQU9JLElBQVAsQ0FERCxLQUdDLHlCQUNJQSxJQURKO0FBRUNGLFVBQUFBLFNBQVMsRUFBRSxDQUFDRSxJQUFJLENBQUNGO0FBRmxCO0FBSUQsT0FSTSxDQUFQOztBQVNEO0FBQ0MsYUFBT0wsU0FBUDtBQXJCRjtBQXVCQSxDQXhCRDs7QUEwQkEsSUFBTVEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsR0FBTTtBQUN6QixNQUFNQyxXQUFXLEdBQUcsRUFBcEI7QUFDQSxNQUFNUixNQUFNLEdBQUc7QUFDZEUsSUFBQUEsRUFBRSxFQUFFLENBRFU7QUFFZEQsSUFBQUEsSUFBSSxFQUFFLFdBRlE7QUFHZEUsSUFBQUEsSUFBSSxFQUFFO0FBSFEsR0FBZjtBQUtBLE1BQU1NLFVBQVUsR0FBRyxDQUFDO0FBQ25CUCxJQUFBQSxFQUFFLEVBQUUsQ0FEZTtBQUVuQkMsSUFBQUEsSUFBSSxFQUFFLGdCQUZhO0FBR25CQyxJQUFBQSxTQUFTLEVBQUU7QUFIUSxHQUFELENBQW5CO0FBTUEsOEJBQVdJLFdBQVg7QUFDQSw4QkFBV1IsTUFBWDtBQUVBLDBCQUFPRixLQUFLLENBQUNVLFdBQUQsRUFBY1IsTUFBZCxDQUFaLEVBQW1DVSxPQUFuQyxDQUEyQ0QsVUFBM0M7QUFDQSxDQWpCRDs7QUFtQkEsSUFBTUUsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixHQUFNO0FBQzVCLE1BQU1ILFdBQVcsR0FBRyxDQUNuQjtBQUNDTixJQUFBQSxFQUFFLEVBQUUsQ0FETDtBQUVDQyxJQUFBQSxJQUFJLEVBQUUsZ0JBRlA7QUFHQ0MsSUFBQUEsU0FBUyxFQUFFO0FBSFosR0FEbUIsRUFNbkI7QUFDQ0YsSUFBQUEsRUFBRSxFQUFFLENBREw7QUFFQ0MsSUFBQUEsSUFBSSxFQUFFLHdCQUZQO0FBR0NDLElBQUFBLFNBQVMsRUFBRTtBQUhaLEdBTm1CLENBQXBCO0FBWUEsTUFBTUosTUFBTSxHQUFHO0FBQ2RFLElBQUFBLEVBQUUsRUFBRSxDQURVO0FBRWRELElBQUFBLElBQUksRUFBRTtBQUZRLEdBQWY7QUFJQSxNQUFNUSxVQUFVLEdBQUcsQ0FDbEI7QUFDQ1AsSUFBQUEsRUFBRSxFQUFFLENBREw7QUFFQ0MsSUFBQUEsSUFBSSxFQUFFLGdCQUZQO0FBR0NDLElBQUFBLFNBQVMsRUFBRTtBQUhaLEdBRGtCLEVBTWxCO0FBQ0NGLElBQUFBLEVBQUUsRUFBRSxDQURMO0FBRUNDLElBQUFBLElBQUksRUFBRSx3QkFGUDtBQUdDQyxJQUFBQSxTQUFTLEVBQUU7QUFIWixHQU5rQixDQUFuQjtBQWFBLDhCQUFXSSxXQUFYO0FBQ0EsOEJBQVdSLE1BQVg7QUFFQSwwQkFBT0YsS0FBSyxDQUFDVSxXQUFELEVBQWNSLE1BQWQsQ0FBWixFQUFtQ1UsT0FBbkMsQ0FBMkNELFVBQTNDO0FBQ0EsQ0FsQ0Q7O0FBb0NBRixXQUFXO0FBQ1hJLGNBQWM7QUFFZEMsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVoiLCJzb3VyY2VSb290IjoiL3Zhci93d3cvaHRtbC9jb2RpbmcvbGVhcm5pbmcvZ2V0dGluZ1N0YXJ0ZWRXaXRoUmVkdXgiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwZWN0LCB7IHRvRXF1YWwgfSBmcm9tICdleHBlY3QnO1xuaW1wb3J0IGRlZXBGcmVlemUgZnJvbSAnZGVlcC1mcmVlemUnO1xuXG5jb25zdCB0b2RvcyA9IChwcmV2U3RhdGUgPSAwLCBhY3Rpb24pID0+IHtcblx0c3dpdGNoKGFjdGlvbi50eXBlKSB7XG5cdFx0Y2FzZSAnQUREX1RPRE9TJzpcblx0XHRcdHJldHVybiBbXG5cdFx0XHRcdC4uLnByZXZTdGF0ZSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdGlkOiBhY3Rpb24uaWQsXG5cdFx0XHRcdFx0dGV4dDogYWN0aW9uLnRleHQsXG5cdFx0XHRcdFx0Y29tcGxldGVkOiBmYWxzZVxuXHRcdFx0XHR9XG5cdFx0XHRdO1xuXHRcdGNhc2UgJ1RPR0dMRV9UT0RPUyc6XG5cdFx0XHRyZXR1cm4gcHJldlN0YXRlLm1hcCh0b2RvID0+IHtcblx0XHRcdFx0aWYgKHRvZG8uaWQgIT09IGFjdGlvbi5pZClcblx0XHRcdFx0XHRyZXR1cm4gdG9kbztcblx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHQuLi50b2RvLFxuXHRcdFx0XHRcdFx0Y29tcGxldGVkOiAhdG9kby5jb21wbGV0ZWRcblx0XHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRkZWZhdWx0OlxuXHRcdFx0cmV0dXJuIHByZXZTdGF0ZTtcblx0fVxufVxuXG5jb25zdCB0ZXN0QWRkVG9kbyA9ICgpID0+IHtcblx0Y29uc3Qgc3RhdGVCZWZvcmUgPSBbXTtcblx0Y29uc3QgYWN0aW9uID0ge1xuXHRcdGlkOiAwLFxuXHRcdHR5cGU6ICdBRERfVE9ET1MnLFxuXHRcdHRleHQ6ICdEbyBzb21ldGhpbmcgISdcblx0fVxuXHRjb25zdCBzdGF0ZUFmdGVyID0gW3tcblx0XHRpZDogMCxcblx0XHR0ZXh0OiAnRG8gc29tZXRoaW5nICEnLFxuXHRcdGNvbXBsZXRlZDogZmFsc2Vcblx0fV1cblxuXHRkZWVwRnJlZXplKHN0YXRlQmVmb3JlKTtcblx0ZGVlcEZyZWV6ZShhY3Rpb24pO1xuXG5cdGV4cGVjdCh0b2RvcyhzdGF0ZUJlZm9yZSwgYWN0aW9uKSkudG9FcXVhbChzdGF0ZUFmdGVyKTtcbn1cblxuY29uc3QgdGVzdFRvZ2dsZVRvZG8gPSAoKSA9PiB7XG5cdGNvbnN0IHN0YXRlQmVmb3JlID0gW1xuXHRcdHtcblx0XHRcdGlkOiAwLFxuXHRcdFx0dGV4dDogJ0RvIHNvbWV0aGluZyAhJyxcblx0XHRcdGNvbXBsZXRlZDogZmFsc2Vcblx0XHR9LFxuXHRcdHtcblx0XHRcdGlkOiAxLFxuXHRcdFx0dGV4dDogJ0RvIHNvbWV0aGluZywgcGxlYXNlICEnLFxuXHRcdFx0Y29tcGxldGVkOiBmYWxzZVxuXHRcdH1cblx0XTtcblx0Y29uc3QgYWN0aW9uID0ge1xuXHRcdGlkOiAxLFxuXHRcdHR5cGU6ICdUT0dHTEVfVE9ET1MnXG5cdH1cblx0Y29uc3Qgc3RhdGVBZnRlciA9IFtcblx0XHR7XG5cdFx0XHRpZDogMCxcblx0XHRcdHRleHQ6ICdEbyBzb21ldGhpbmcgIScsXG5cdFx0XHRjb21wbGV0ZWQ6IGZhbHNlXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRpZDogMSxcblx0XHRcdHRleHQ6ICdEbyBzb21ldGhpbmcsIHBsZWFzZSAhJyxcblx0XHRcdGNvbXBsZXRlZDogdHJ1ZVxuXHRcdH1cblx0XVxuXG5cdGRlZXBGcmVlemUoc3RhdGVCZWZvcmUpO1xuXHRkZWVwRnJlZXplKGFjdGlvbik7XG5cblx0ZXhwZWN0KHRvZG9zKHN0YXRlQmVmb3JlLCBhY3Rpb24pKS50b0VxdWFsKHN0YXRlQWZ0ZXIpO1xufVxuXG50ZXN0QWRkVG9kbygpO1xudGVzdFRvZ2dsZVRvZG8oKTtcblxuY29uc29sZS5sb2coJ1RFU1RTIFBBU1NFRCAhJyk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "05_creatingToggleTodosReducer.js"
      ],
      "names": [
        "todos",
        "prevState",
        "action",
        "type",
        "id",
        "text",
        "completed",
        "map",
        "todo",
        "testAddTodo",
        "stateBefore",
        "stateAfter",
        "toEqual",
        "testToggleTodo",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAA2B;AAAA,MAA1BC,SAA0B,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AACxC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,WAAL;AACC,0CACIF,SADJ,IAEC;AACCG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADZ;AAECC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFd;AAGCC,QAAAA,SAAS,EAAE;AAHZ,OAFD;;AAQD,SAAK,cAAL;AACC,aAAOL,SAAS,CAACM,GAAV,CAAc,UAAAC,IAAI,EAAI;AAC5B,YAAIA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAvB,EACC,OAAOI,IAAP,CADD,KAGC,yBACIA,IADJ;AAECF,UAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAFlB;AAID,OARM,CAAP;;AASD;AACC,aAAOL,SAAP;AArBF;AAuBA,CAxBD;;AA0BA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzB,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMR,MAAM,GAAG;AACdE,IAAAA,EAAE,EAAE,CADU;AAEdD,IAAAA,IAAI,EAAE,WAFQ;AAGdE,IAAAA,IAAI,EAAE;AAHQ,GAAf;AAKA,MAAMM,UAAU,GAAG,CAAC;AACnBP,IAAAA,EAAE,EAAE,CADe;AAEnBC,IAAAA,IAAI,EAAE,gBAFa;AAGnBC,IAAAA,SAAS,EAAE;AAHQ,GAAD,CAAnB;AAMA,8BAAWI,WAAX;AACA,8BAAWR,MAAX;AAEA,0BAAOF,KAAK,CAACU,WAAD,EAAcR,MAAd,CAAZ,EAAmCU,OAAnC,CAA2CD,UAA3C;AACA,CAjBD;;AAmBA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC5B,MAAMH,WAAW,GAAG,CACnB;AACCN,IAAAA,EAAE,EAAE,CADL;AAECC,IAAAA,IAAI,EAAE,gBAFP;AAGCC,IAAAA,SAAS,EAAE;AAHZ,GADmB,EAMnB;AACCF,IAAAA,EAAE,EAAE,CADL;AAECC,IAAAA,IAAI,EAAE,wBAFP;AAGCC,IAAAA,SAAS,EAAE;AAHZ,GANmB,CAApB;AAYA,MAAMJ,MAAM,GAAG;AACdE,IAAAA,EAAE,EAAE,CADU;AAEdD,IAAAA,IAAI,EAAE;AAFQ,GAAf;AAIA,MAAMQ,UAAU,GAAG,CAClB;AACCP,IAAAA,EAAE,EAAE,CADL;AAECC,IAAAA,IAAI,EAAE,gBAFP;AAGCC,IAAAA,SAAS,EAAE;AAHZ,GADkB,EAMlB;AACCF,IAAAA,EAAE,EAAE,CADL;AAECC,IAAAA,IAAI,EAAE,wBAFP;AAGCC,IAAAA,SAAS,EAAE;AAHZ,GANkB,CAAnB;AAaA,8BAAWI,WAAX;AACA,8BAAWR,MAAX;AAEA,0BAAOF,KAAK,CAACU,WAAD,EAAcR,MAAd,CAAZ,EAAmCU,OAAnC,CAA2CD,UAA3C;AACA,CAlCD;;AAoCAF,WAAW;AACXI,cAAc;AAEdC,OAAO,CAACC,GAAR,CAAY,gBAAZ",
      "sourceRoot": "/var/www/html/coding/learning/gettingStartedWithRedux",
      "sourcesContent": [
        "import expect, { toEqual } from 'expect';\nimport deepFreeze from 'deep-freeze';\n\nconst todos = (prevState = 0, action) => {\n\tswitch(action.type) {\n\t\tcase 'ADD_TODOS':\n\t\t\treturn [\n\t\t\t\t...prevState,\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\ttext: action.text,\n\t\t\t\t\tcompleted: false\n\t\t\t\t}\n\t\t\t];\n\t\tcase 'TOGGLE_TODOS':\n\t\t\treturn prevState.map(todo => {\n\t\t\t\tif (todo.id !== action.id)\n\t\t\t\t\treturn todo;\n\t\t\t\telse\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...todo,\n\t\t\t\t\t\tcompleted: !todo.completed\n\t\t\t\t\t}\n\t\t\t});\n\t\tdefault:\n\t\t\treturn prevState;\n\t}\n}\n\nconst testAddTodo = () => {\n\tconst stateBefore = [];\n\tconst action = {\n\t\tid: 0,\n\t\ttype: 'ADD_TODOS',\n\t\ttext: 'Do something !'\n\t}\n\tconst stateAfter = [{\n\t\tid: 0,\n\t\ttext: 'Do something !',\n\t\tcompleted: false\n\t}]\n\n\tdeepFreeze(stateBefore);\n\tdeepFreeze(action);\n\n\texpect(todos(stateBefore, action)).toEqual(stateAfter);\n}\n\nconst testToggleTodo = () => {\n\tconst stateBefore = [\n\t\t{\n\t\t\tid: 0,\n\t\t\ttext: 'Do something !',\n\t\t\tcompleted: false\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\ttext: 'Do something, please !',\n\t\t\tcompleted: false\n\t\t}\n\t];\n\tconst action = {\n\t\tid: 1,\n\t\ttype: 'TOGGLE_TODOS'\n\t}\n\tconst stateAfter = [\n\t\t{\n\t\t\tid: 0,\n\t\t\ttext: 'Do something !',\n\t\t\tcompleted: false\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\ttext: 'Do something, please !',\n\t\t\tcompleted: true\n\t\t}\n\t]\n\n\tdeepFreeze(stateBefore);\n\tdeepFreeze(action);\n\n\texpect(todos(stateBefore, action)).toEqual(stateAfter);\n}\n\ntestAddTodo();\ntestToggleTodo();\n\nconsole.log('TESTS PASSED !');"
      ]
    },
    "sourceType": "script",
    "mtime": 1568526583449
  }
}